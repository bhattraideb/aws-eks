version: "3.9"

services:
  django_api:
    build:
      context: .
      dockerfile: DjangoDockerfile
    image: django-api:latest
    container_name: django_api
    command: >
      sh -c "poetry run python manage.py migrate &&
             poetry run python manage.py runserver 0.0.0.0:8000"

#    environment:
#      - DEBUG=1
#      - DB_HOST=psql_db
#      - DB_NAME=django_test_api
#      - DB_USER=postgres
#      - DB_PASS=admin
#      - DB_PORT=5432

################## Replace env vars with .env file and replace 'environment:' with the file
    env_file:
      - django-api/.env
    ports:
      - "8000:8000"
#    volumes:
#      - staticfiles:/app/staticfiles/
    volumes:
      - django_api_data:/vol/django_api
      - ./django-api:/app
    depends_on:
      psql_db:
         condition: service_healthy
      redis_db:
        condition: service_started

  psql_db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=django_test_api
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
################## Replace env vars with .env file and replace 'environment:' with the file
#    env_file:
#      - django-api/.env
    volumes:
      - postgres_data:/var/lib/postgresql/14/main/data/
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "django_test_api", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis_db:
    image: redis:alpine
    restart: always
    expose:
      - 6388
    ports:
      - "6388:6388"
    volumes:
        - redis_data:/data
    entrypoint: redis-server --appendonly yes --port 6388

volumes:
  django_api_data:
  postgres_data:
  redis_data:
#  staticfiles:
#    external: true

